package baekJoon;

import java.util.Scanner;

//문제
//정수를 저장하는 큐를 구현한 다음, 입력으로 주어지는 명령을 처리하는 프로그램을 작성하시오.
//
//명령은 총 여섯 가지이다.
//
//push X: 정수 X를 큐에 넣는 연산이다.
//pop: 큐에서 가장 앞에 있는 정수를 빼고, 그 수를 출력한다. 만약 큐에 들어있는 정수가 없는 경우에는 -1을 출력한다.
//size: 큐에 들어있는 정수의 개수를 출력한다.
//empty: 큐가 비어있으면 1, 아니면 0을 출력한다.
//front: 큐의 가장 앞에 있는 정수를 출력한다. 만약 큐에 들어있는 정수가 없는 경우에는 -1을 출력한다.
//back: 큐의 가장 뒤에 있는 정수를 출력한다. 만약 큐에 들어있는 정수가 없는 경우에는 -1을 출력한다.
//입력
//첫째 줄에 주어지는 명령의 수 N (1 ≤ N ≤ 2,000,000)이 주어진다. 둘째 줄부터 N개의 줄에는 명령이 하나씩 주어진다. 주어지는 정수는 1보다 크거나 같고, 100,000보다 작거나 같다. 문제에 나와있지 않은 명령이 주어지는 경우는 없다.
//
//출력
//출력해야하는 명령이 주어질 때마다, 한 줄에 하나씩 출력한다.

public class No18258 {
	int arr[];
	int stack;
	int stackPointer;

	public No18258(int n) {
		arr = new int[n];
		stack = 0;
		stackPointer = 0;
	}

	public void push(int n) {
		arr[stack++] = n;
	}

	public int pop() {
		if (stack - stackPointer <= 0) {
			return -1;
		} else {
			return arr[stackPointer++];
		}
	}

	public int size() {
		return stack - stackPointer;
	}

	public int empty() {
		return stack - stackPointer <= 0 ? 1 : 0;
	}

	public int front() {
		if (stack - stackPointer <= 0) {
			return -1;
		} else {
			return arr[stackPointer];
		}
	}

	public int back() {
		if (stack - stackPointer <= 0) {
			return -1;
		} else {
			return arr[stack - 1];
		}
	}

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		int x = Integer.parseInt(scan.nextLine());
		StringBuilder sb = new StringBuilder();
		No18258 que = new No18258(x);
		

		for (int i = 0; i < x; i++) {
			String command = scan.nextLine();
			if (command.contains("push")) {
				int n = Integer.parseInt(command.split(" ")[1]);
				que.push(n);
			} else if (command.equals("pop")) {
				sb.append(que.pop() + "\n");
			} else if (command.equals("size")) {
				sb.append(que.size() + "\n");
			} else if (command.equals("empty")) {
				sb.append(que.empty() + "\n");
			} else if (command.equals("front")) {
				sb.append(que.front() + "\n");
			} else if (command.equals("back")) {
				sb.append(que.back() + "\n");
			}
		}
		System.out.println(sb.toString());
	}
}
